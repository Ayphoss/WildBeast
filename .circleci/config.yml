version: 2
jobs:
  test:
    docker:
      - image: node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install modules
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Test
          command: npm test
  build:
    docker:
      - image: docker:latest
    steps:
      - run:
          name: Git
          command: apk add --update git
      - checkout
      - setup_remote_docker
      - run:
          name: Initialize submodule
          command: git submodule update --init --remote
      - run:
          name: Build Docker image
          command: if [ "$CIRCLE_BRANCH" = "master" ]; then docker build -t dougley/wildbeast:latest --build-arg buildno=$CIRCLE_BUILD_NUM --build-arg commitsha=$CIRCLE_SHA1 .; else docker build -t dougley/wildbeast:$CIRCLE_BRANCH --build-arg buildno=$CIRCLE_BUILD_NUM --build-arg commitsha=$CIRCLE_SHA1 .; fi
      - run:
          name: Push image to Docker hub
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            if [ "$CIRCLE_BRANCH" = "master" ]; then docker push dougley/wildbeast:latest; else docker push dougley/wildbeast:$CIRCLE_BRANCH; fi
  tagged-build:
    docker:
      - image: docker:latest
    steps:
      - run:
          name: Git
          command: apk add --update git
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Initialize submodule
          command: git submodule update --init --remote
      - run:
          name: Build Docker image
          command: docker build -t dougley/wildbeast:$(git describe --abbrev=0 --tags) --build-arg buildno=$CIRCLE_BUILD_NUM --build-arg commitsha=$CIRCLE_SHA1 .
      - run:
          name: Push image to Docker hub
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push dougley/wildbeast:$(git describe --abbrev=0 --tags)
  docs-build:
    docker:
      - image: python:3.5
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Compile
          command: |
            . venv/bin/activate
            mkdocs build
  docs-deploy:
    docker:
      - image: anthonyz/python3-node8:latest
    steps:
      - checkout
      - run:
          name: Register Python alias for compatibility
          command: alias python='python3'
      - run:
          name: Install Python dependencies
          command: python3 -m pip install --upgrade -r requirements.txt
      - run:
          name: Install Node dependencies
          command: npm install
      - run:
          name: Build docs
          command: npm run build
      - add_ssh_keys:
          fingerprints:
              - "cf:bd:5e:04:62:ce:4d:da:1e:11:87:a1:ab:3e:9f:df"
      - run:
          name: Deploy docs
          command: |
            git config user.email 9768134+Dougley@users.noreply.github.com
            python3 -m mkdocs gh-deploy
  docs-deploy-dryrun:
    docker:
      - image: anthonyz/python3-node8:latest
    steps:
      - checkout
      - run:
          name: Register Python alias for compatibility
          command: alias python='python3'
      - run:
          name: Install Python dependencies
          command: python3 -m pip install --upgrade -r requirements.txt
      - run:
          name: Install Node dependencies
          command: npm install
      - run:
          name: Build docs
          command: npm run build
workflows:
  version: 2
  docs:
    jobs:
      - docs-build
      - docs-deploy-dryrun:
          requires:
            - docs-build
      - docs-deploy:
          requires:
            - docs-deploy-dryrun
          filters:
            branches:
               only: master
  test_n_build:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: /master|experimental/
      - tagged-build:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.+/
